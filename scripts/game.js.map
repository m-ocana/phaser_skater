{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "/Users/Manuel/Sandbox/phaser_skater/src/index.js",
    "/Users/Manuel/Sandbox/phaser_skater/src/states/Boot.js",
    "/Users/Manuel/Sandbox/phaser_skater/src/states/GameOver.js",
    "/Users/Manuel/Sandbox/phaser_skater/src/states/GameTitle.js",
    "/Users/Manuel/Sandbox/phaser_skater/src/states/Main.js",
    "/Users/Manuel/Sandbox/phaser_skater/src/states/Preload.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Boot from 'states/Boot';\nimport Preload from 'states/Preload';\nimport GameTitle from 'states/GameTitle';\nimport Main from 'states/Main';\nimport GameOver from 'states/GameOver';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\n\t\tsuper(window.innerWidth * window.devicePixelRatio, window.innerHeight * window.devicePixelRatio, Phaser.AUTO);\n\n\t\tthis.state.add('Boot', Boot, false);\n\t\tthis.state.add('Preload', Preload, false);\n\t\tthis.state.add('GameTitle', GameTitle, false);\n\t\tthis.state.add('Main', Main, false);\n\t\tthis.state.add('GameOver', GameOver, false);\n\n\t\tthis.state.start('Boot');\n\t}\n\n}\n\nnew Game();",
    "class Boot extends Phaser.State {\n\n\tpreload() {\n\n\t}\n\n\tcreate() {\n\t\tthis.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\t\tthis.game.state.start(\"Preload\");\n\t}\n\n}\n\nexport default Boot;",
    "class GameOver extends Phaser.State {\n\n\tcreate() {\n\n\t}\n\n\trestartGame() {\n\t\tthis.game.state.start(\"Main\");\n\t}\n\n}\n\nexport default GameOver;\n",
    "class GameTitle extends Phaser.State {\n\n\tcreate() {\n\n\t}\n\n\tstartGame() {\n\t\tthis.game.state.start(\"Main\");\n\t}\n\n}\n\nexport default GameTitle;\n",
    "class Main extends Phaser.State {\n\n\tcreate() {\n\n\t\t// Enable Arcade Physics\n        this.game.physics.startSystem(Phaser.Physics.P2JS);\n        \n        // Set variables\n        this.game.physics.p2.gravity.y = 1600;\n        this.game.stage.backgroundColor = '#f76943';\n\n        // Adding Tilemap\n\t\tthis.map = this.game.add.tilemap('tilemap');\n\t\tthis.map.addTilesetImage('ninja-tiles64', 'tiles');\n\n\t\t// Adding background sprites\n\t\tthis.buildingsMiddle = this.game.add.tileSprite(0, 0,\n\t\t\tthis.map.widthInPixels, \n\t\t\tthis.game.cache.getImage('buildings-middle').height, \n\t\t\t'buildings-middle'\n\t\t);\n\t\tthis.buildingsFront = this.game.add.tileSprite(0, 0,\n\t\t\tthis.map.widthInPixels, \n\t\t\tthis.game.cache.getImage('buildings-front').height, \n\t\t\t'buildings-front'\n\t\t);\n\n        // Creating layers & adding collisions\n\t\tthis.ground = this.map.createLayer('groundLayer');\n\t\tthis.ramps = this.map.createLayer('tiledRampsLayer');\n\t\tthis.map.setCollisionBetween(2,34,true,'groundLayer');\n\t\tthis.game.physics.p2.convertTilemap(this.map, this.ground);\n\t\tthis.game.physics.p2.convertCollisionObjects(this.map,\"ramps\");\n\t\t\n\t\t// Match canvas to the size of the Tilemap\n\t\tthis.ground.resizeWorld(); \n\t\t\n\t\t// Add Player\n\t\tthis.player = this.game.add.sprite(64, 1024, 'player');\n\t\tthis.game.physics.p2.enable(this.player);\n\t\t// Setting Player parameters\n\t\tthis.player.anchor.setTo(0.5,0.5); // set the anchor to the exact middle of the player\n    \tthis.player.body.setCircle(64,0,0); // set circle around the player with 64px radius\n    \tthis.player.body.fixedRotation = true;\n    \t// Adding player animations\n    \tthis.player.animations.add('move', [0,1], 0.5, true);\n    \tthis.player.animations.add('jump',[2,3,4],8);\n    \tthis.player.animations.add('land',[5,6],4);\n\n    \t// Setting camera & adding controls\n    \tthis.game.camera.follow(this.player);\n\t\tthis.controls = this.game.input.keyboard.createCursorKeys();\t\t\n\n   \t}\n\n\tupdate() {\n\n\t\tif (this.controls.left.isDown){\n\t\t\tif(this._touchingDown(this.player)){\n\t\t\t\t// flips image to the left\n\t\t\t\tthis.player.animations.play('move');\n\t\t\t\tthis.player.scale.x = -1;\n\t\t\t\tthis.player.body.velocity.x -= 20;\n\t\t\t} else {\n\t\t\t\tthis.player.body.velocity.x -= 2;\n\t\t\t\tthis.player.angle-=1;\n\t\t\t}\n\t\t}\n\n\t\tif (this.controls.right.isDown){\n\t\t\tif(this._touchingDown(this.player)){\n\t\t\t\tthis.player.animations.play('move');\n\t\t\t\tthis.player.scale.x = 1;\n\t\t\t\tthis.player.body.velocity.x += 20;\n\t\t\t} else {\n\t\t\t\tthis.player.body.velocity.x += 2;\n\t\t\t\tthis.player.angle+=1;\n\t\t\t}\n\t\t}\n\n\t\tif (this.controls.up.isDown && this._touchingDown(this.player)) {\n\t\t\tthis.player.animations.play('jump');\n\t\t\tthis.player.body.velocity.y -= 400;\n\t\t}\n\n\t\tif (this.player.bottom >= this.world.bounds.bottom) {\n\t\t    this.state.start(\"Main\");\n\t\t}\n\n    \tthis._angle(this.player);\n\n\t}\n\n\t/*\n\tthis function uses the p2 collision calculations that are done on every step to find out if the player collides with something on the bottom - it returns true if a collision is happening\n\t*/\n\t_touchingDown(someone) {\n\t    var yAxis = p2.vec2.fromValues(0, 1);\n\t    var result = false;\n\t    for (var i = 0; i < this.game.physics.p2.world.narrowphase.contactEquations.length; i++) {\n\t        var c = this.game.physics.p2.world.narrowphase.contactEquations[i];  // cycles through all the contactEquations until it finds our \"someone\"\n\t        if (c.bodyA === someone.body.data || c.bodyB === someone.body.data)        {\n\t            var d = p2.vec2.dot(c.normalA, yAxis); // Normal dot Y-axis\n\t            if (c.bodyA === someone.body.data) d *= -1;\n\t            if (d > 0.5) result = true;\n\t        }\n\t    } return result;\n\t}\n\n\t_angle(someone) {\n    var yAxis = p2.vec2.fromValues(0, 1);\n    var result = 1;\n    for (var i = 0; i < this.game.physics.p2.world.narrowphase.contactEquations.length; i++) {\n        var c = this.game.physics.p2.world.narrowphase.contactEquations[i];  // cycles through all the contactEquations until it finds our \"someone\"\n        if (c.bodyA === someone.body.data || c.bodyB === someone.body.data)        {\n            var d = p2.vec2.dot(c.normalA, yAxis); // Normal dot Y-axis\n            someone.angle = c.normalA[0]*100;\n        }\n    } return result;\n}\n\n}\n\nexport default Main;\n",
    "class Preload extends Phaser.State {\n\n\tpreload() {\n\t\t/* Preload required assets */\n        /* Background layers */\n    \tthis.game.load.image('buildings-back', 'assets/buildings-back.png');\n    \tthis.game.load.image('buildings-middle', 'assets/buildings-middle.png');\n    \tthis.game.load.image('buildings-front', 'assets/buildings-front.png');\n\n        /* Tilemap */\n    \tthis.game.load.tilemap('tilemap', 'assets/test-tile-map.json', null, Phaser.Tilemap.TILED_JSON);\n    \tthis.game.load.spritesheet('tiles', 'assets/ninja-tiles64.png', 64, 64);\n\n        /* Player */\n        this.game.load.spritesheet('player', 'assets/skater-sprites.png',64,128);\n\t}\n\n\tcreate() {\n\t\t//NOTE: Change to GameTitle if required\n\t\tthis.game.state.start(\"Main\");\n\t}\n\n}\n\nexport default Preload;\n"
  ]
}